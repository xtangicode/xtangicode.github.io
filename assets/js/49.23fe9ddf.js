(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{461:function(t,e,s){"use strict";s.r(e);var r=s(14),n=Object(r.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[this._v("1.批量插入数据避免多preparing，一旦prepare多次sql预处理就失效，尽量空值不插入")]),this._v(" "),t("p",[this._v("2.jdbc url添加参数rewriteBatchedStatements=true")]),this._v(" "),t("blockquote",[t("p",[this._v("MySQL的JDBC连接的url中要加rewriteBatchedStatements参数，并保证5.1.13以上版本的驱动，才能实现高性能的批量插入。\nMySQL JDBC驱动在默认情况下会无视executeBatch()语句，把我们期望批量执行的一组sql语句拆散，一条一条地发给MySQL数据库，批量插入实际上是单条插入，直接造成较低的性能。\n只有把rewriteBatchedStatements参数置为true, 驱动才会帮你批量执行SQL\n另外这个选项对INSERT/UPDATE/DELETE都有效")])]),this._v(" "),t("p",[this._v("3.尽量手写批量处理SQL，性能实测优于MyBatis批量处理，但要注意批量处理一次处理多少条。")])])}),[],!1,null,null,null);e.default=n.exports}}]);